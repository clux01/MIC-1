-- VHDL Entity IP006_lib.delay_mbus32.symbol
--
-- Created:
--          by - lamplpat.UNKNOWN (M00159)
--          at - 09:13:36 09.03.2018
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
LIBRARY IP006_LIB;
USE IP006_LIB.busdef.ALL;
USE ieee.math_real.ALL;
USE ieee.numeric_std.ALL;

ENTITY delay_mbus32 IS
   GENERIC( 
      DELAY_CYCLES : integer := 16
   );
   PORT( 
      clk     : IN     std_logic;
      mbus_iB : IN     mbus32_i_t;
      mbus_o  : IN     mbus32_o_t;
      rst     : IN     std_logic;
      mbus_i  : OUT    mbus32_i_t;
      mbus_oB : OUT    mbus32_o_t
   );

-- Declarations

END delay_mbus32 ;

--
-- VHDL Architecture IP006_lib.delay_mbus32.struct
--
-- Created:
--          by - lamplpat.UNKNOWN (M00159)
--          at - 15:17:21 08.03.2018
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
LIBRARY IP006_LIB;
USE IP006_LIB.busdef.ALL;
USE ieee.math_real.ALL;
USE ieee.numeric_std.ALL;


ARCHITECTURE struct OF delay_mbus32 IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL enable     : std_logic;
   SIGNAL in_addr    : std_logic_vector(15 DOWNTO 0);
   SIGNAL in_addrB   : std_logic_vector(15 DOWNTO 0);
   SIGNAL in_rd      : std_logic;
   SIGNAL in_rdB     : std_logic;
   SIGNAL in_req     : std_logic;
   SIGNAL in_reqB    : std_logic;
   SIGNAL in_wdata   : std_logic_vector(31 DOWNTO 0);
   SIGNAL in_wdataB  : std_logic_vector(31 DOWNTO 0);
   SIGNAL in_we      : std_logic;
   SIGNAL in_weB     : std_logic;
   SIGNAL out_ack    : std_logic;
   SIGNAL out_ackB   : std_logic;
   SIGNAL out_grant  : std_logic;
   SIGNAL out_grantB : std_logic;
   SIGNAL out_rdata  : std_logic_vector(31 DOWNTO 0);
   SIGNAL out_rdataB : std_logic_vector(31 DOWNTO 0);


   -- Component Declarations
   COMPONENT delay
   GENERIC (
      delay_clk_cycles : integer := 8
   );
   PORT (
      clk    : IN     std_logic;
      input  : IN     std_logic;
      reset  : IN     std_logic;
      output : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT delay_e_vector
   GENERIC (
      DELAY_CLK_CYCLES : integer   := 8;
      WIDTH            : integer   := 8;
      RST_TO           : std_logic := '0'
   );
   PORT (
      clk    : IN     std_logic;
      enable : IN     std_logic;
      input  : IN     std_logic_vector (WIDTH-1 DOWNTO 0);
      reset  : IN     std_logic;
      output : OUT    std_logic_vector (WIDTH-1 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : delay USE ENTITY IP006_lib.delay;
   FOR ALL : delay_e_vector USE ENTITY IP006_lib.delay_e_vector;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   -- eb1 1  
   in_addr <= mbus_o.addr;
   in_wdata <= mbus_o.wdata;
   in_we    <= mbus_o.we;
   in_rd    <= mbus_o.rd;
   in_req   <= mbus_o.req;
   
   mbus_i.rdata <= out_rdata;
   mbus_i.ack   <= out_ack;
   mbus_i.grant <= out_grant;
   
   enable <= '1';

   -- HDL Embedded Text Block 2 eb2
   -- eb2 2    
   mbus_oB.addr <= in_addrB;
   mbus_oB.wdata <= in_wdataB ;
   mbus_oB.we    <= in_weB;
   mbus_oB.rd    <= in_rdB;
   mbus_oB.req   <= in_reqB;
   
   out_rdataB <= mbus_iB.rdata;
   out_ackB   <= mbus_iB.ack;
   out_grantB <= mbus_iB.grant;
   


   -- Instance port mappings.
   U_0 : delay
      GENERIC MAP (
         delay_clk_cycles => DELAY_CYCLES
      )
      PORT MAP (
         clk    => clk,
         reset  => rst,
         input  => in_rd,
         output => in_rdB
      );
   U_2 : delay
      GENERIC MAP (
         delay_clk_cycles => DELAY_CYCLES
      )
      PORT MAP (
         clk    => clk,
         reset  => rst,
         input  => in_req,
         output => in_reqB
      );
   U_3 : delay
      GENERIC MAP (
         delay_clk_cycles => DELAY_CYCLES
      )
      PORT MAP (
         clk    => clk,
         reset  => rst,
         input  => in_we,
         output => in_weB
      );
   U_6 : delay
      GENERIC MAP (
         delay_clk_cycles => DELAY_CYCLES
      )
      PORT MAP (
         clk    => clk,
         reset  => rst,
         input  => out_ackB,
         output => out_ack
      );
   U_7 : delay
      GENERIC MAP (
         delay_clk_cycles => DELAY_CYCLES
      )
      PORT MAP (
         clk    => clk,
         reset  => rst,
         input  => out_grantB,
         output => out_grant
      );
   U_1 : delay_e_vector
      GENERIC MAP (
         DELAY_CLK_CYCLES => DELAY_CYCLES,
         WIDTH            => 16,
         RST_TO           => '0'
      )
      PORT MAP (
         clk    => clk,
         reset  => rst,
         enable => enable,
         input  => in_addr,
         output => in_addrB
      );
   U_4 : delay_e_vector
      GENERIC MAP (
         DELAY_CLK_CYCLES => DELAY_CYCLES,
         WIDTH            => 32,
         RST_TO           => '0'
      )
      PORT MAP (
         clk    => clk,
         reset  => rst,
         enable => enable,
         input  => in_wdata,
         output => in_wdataB
      );
   U_5 : delay_e_vector
      GENERIC MAP (
         DELAY_CLK_CYCLES => DELAY_CYCLES,
         WIDTH            => 32,
         RST_TO           => '0'
      )
      PORT MAP (
         clk    => clk,
         reset  => rst,
         enable => enable,
         input  => out_rdataB,
         output => out_rdata
      );

END struct;
